package swingio.scala.components

import java.awt.event.ActionListener

import cats.effect.IO
import javax.swing.JButton
import swingio.scala.MonadicActionListener

/** Contains implicit class that enriches [[JButton]] with additional functionalities by leveraging what is
 * referred to as "Pimp My Library Pattern".
 * Use this imports:
 * {{{
 * import swingio.scala._
 * import swingio.scala.components.JButtonImplicits._
 * }}}
 * to enable methods returning [[IO]] for combining methods invocation inside for-comprehension and
 * providing a description of GUI-related logic.
 *
 * @see [[IO]] for details on IO monad and how to run it. */
object JButtonImplicits {

  implicit class JButtonIO(jButton: JButton){

    /** Returns an [[IO]] containing the description of a [[JButton#getText]]
     * method invocation on this instance.*/
    def textGot(): IO[String] = IO {jButton.getText}

    /** Returns an [[IO]] containing the description of a [[JButton#setText]]
     * method invocation on this instance.*/
    def textSet(text: String): IO[Unit] = IO {jButton.setText(text)}

    /** Returns an [[IO]] containing the description of a [[JButton#setEnabled]]
     * method invocation on this instance.*/
    def enabledSet(b: Boolean): IO[Unit] = IO { jButton.setEnabled(b) }

    /** Returns an [[IO]] that registers an [[ActionListener]] for handling the
     * [[java.awt.event.ActionEvent]]s generated by this instance.
     * It accepts as parameter a procedural specification of the listener instead of a
     * monadic one.
     * @see [[MonadicActionListener]] and [[monadicActionListenerAdded]] for a monadic
     *      listener description.*/
    def actionListenerAdded(l: ActionListener): IO[Unit] = IO {jButton.addActionListener(l)}

    /** Returns an [[IO]] containing the code for unregistering the given [[ActionListener]] from
     * this instance. */
    def actionListenerRemoved(l:ActionListener): IO[Unit] = IO {jButton.removeActionListener(l)}

    /** Returns an [[IO]] that registers a [[MonadicActionListener]] for handling the
     * [[java.awt.event.ActionEvent]]s generated by this instance.
     * It accepts as parameter a monadic specification of the listener instead of a
     * procedural one.
     *
     * @see [[actionListenerAdded]] for a procedural listener description.*/
    def monadicActionListenerAdded(l : MonadicActionListener): IO[Unit] =
      IO {jButton.addActionListener(l(_).unsafeRunSync())}

    /** Returns an [[IO]] containing the code for unregistering the given [[MonadicActionListener]] from
     * this instance. */
    def monadicActionListenerRemoved(l: MonadicActionListener): IO[Unit] =
      IO {jButton.removeActionListener(l(_).unsafeRunSync())}

  }
}
